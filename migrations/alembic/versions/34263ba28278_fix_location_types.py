"""Fix location types

Revision ID: 34263ba28278
Revises: b8b9c74b13e1
Create Date: 2023-11-07 15:27:38.346244

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "34263ba28278"
down_revision: Union[str, None] = "b8b9c74b13e1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("customers", "latitude", existing_type=mysql.INTEGER(), type_=sa.Double(), existing_nullable=False)
    op.alter_column("customers", "longitude", existing_type=mysql.INTEGER(), type_=sa.Double(), existing_nullable=False)
    op.alter_column("warehouses", "latitude", existing_type=mysql.INTEGER(), type_=sa.Double(), existing_nullable=False)
    op.alter_column(
        "warehouses", "longitude", existing_type=mysql.INTEGER(), type_=sa.Double(), existing_nullable=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "warehouses", "longitude", existing_type=sa.Double(), type_=mysql.INTEGER(), existing_nullable=False
    )
    op.alter_column("warehouses", "latitude", existing_type=sa.Double(), type_=mysql.INTEGER(), existing_nullable=False)
    op.alter_column("customers", "longitude", existing_type=sa.Double(), type_=mysql.INTEGER(), existing_nullable=False)
    op.alter_column("customers", "latitude", existing_type=sa.Double(), type_=mysql.INTEGER(), existing_nullable=False)
    # ### end Alembic commands ###
